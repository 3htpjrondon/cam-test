{
    "ssh": {
        "private_key": {
            "content": {
                "displayname": "Liberty private key,\n# <md>          :description => ",
                "hidden": "false"
            },
            "path": {
                "default": "",
                "description": "Absolute path of the Liberty private key",
                "displayname": "Liberty private key path",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            }
        }
    },
    "was_liberty": {
        "base_version": {
            "default": "18.0.2",
            "description": "The release and fixpack level for WebSphere Liberty to be installed. Example formats are 8.5.5.11 or 18.0.2",
            "displayname": "Liberty version",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "cleanpackages": {
            "default": "",
            "description": "A flag to indicate whether installation packages are to be cleaned after a successful installation",
            "displayname": "Liberty cleanpackages flag",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "create_os_users": {
            "default": "",
            "description": "The userid that performs the installation of Liberty should be created",
            "displayname": "Create Liberty Installation userid",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "edition": {
            "choice": [
                "base",
                "core",
                "nd"
            ],
            "default": "",
            "description": "Indicates which Liberty offering should be installed. Valid values are: base, core, nd",
            "displayname": "Liberty Edition to be installed",
            "hidden": "false",
            "immutable_after_create": "true",
            "options": [
                "base",
                "core",
                "nd"
            ],
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "farm": {
            "central_node": {
                "default": "",
                "description": "Hostname/IP of the liberty node which will gather and merge the plugins. Leave empty when deploying the central node itself",
                "displayname": "Liberty farm central node",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "httpd_plugins_dir": {
                "default": "",
                "description": "Liberty farm directory on the web server where the merged plugin will be pushed",
                "descriptive": "Liberty http plugins dir",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "httpd_user": {
                "default": "",
                "descriptive": "Liberty farm user for pushing the merged plugin file to the web server host",
                "displayname": "Liberty farm http user",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "logFileName": {
                "default": "serverfarm.log",
                "description": "Name of the Liberty farm log file",
                "displayname": "liberty farm log File Name",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "mergedplugins_dir": {
                "default": "",
                "description": "The directory where the merged plugins are stored on the central node",
                "displayname": "Liberty farm merged plugin directory",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "pluginInstallRoot": {
                "default": "plugin_install_root",
                "description": "pluginInstallRoot",
                "displayname": "Liberty farm plugin Install Root",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "plugin_cpy_user": {
                "default": "",
                "description": "The user for pushing the plugins to the central liberty node",
                "displayname": "Liberty plugin copy user",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "plugins_dir": {
                "default": "",
                "description": "The directory where the generated plugins are stored",
                "displayname": "Liberty farm plugin dir",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "sslCertlabel": {
                "default": "definedbyuser",
                "description": "Name of the ssl Cert label which will be added to the keystore",
                "displayname": "Liberty farm ssl Cert label",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "sslKeyringLocation": {
                "default": "/var/liberty/sslkeyring",
                "description": "Full path to the liberty farm ssl Keyring, path must not include the name of the Keyring file",
                "displayname": "Liberty farm ssl Stashfile directory",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "sslStashfileLocation": {
                "default": "/var/liberty/stashfile",
                "description": "Full path to the Liberty farm ssl Stashfile, path must not include the name of the stash file",
                "displayname": "Liberty farm ssl Stashfile directory",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "webserverName": {
                "default": "websrv",
                "description": "A descriptive name for the web server",
                "displayname": "Liberty farm web server name",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "webserverPort": {
                "default": "80",
                "description": "HTTP Transport port that the webserver is listening on",
                "displayname": "Liberty farm HTTP Web server port",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "webserverSecurePort": {
                "displayname": "Liberty farm HTTP Secure web server port",
                "hidden": "false"
            },
            "webserverhost": {
                "default": "",
                "description": "Host name of the web server, not this DNS name must be resolvable",
                "displayname": "Liberty web server host",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            }
        },
        "features": {
            "embeddablecontainer": {
                "default": "false",
                "description": "Flag which determines whether the embeddablecontainer feature will be installed",
                "displayname": "Liberty embeddablecontainer flag",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "secret": "false",
                "selectable": "true",
                "type": "string"
            },
            "liberty": {
                "default": "true",
                "description": "Flag which determines whether the liberty feature will be installed",
                "displayname": "Liberty liberty flag",
                "hidden": "false",
                "immutable_after_create": "true",
                "parm_type": "node",
                "precedence_level": "node",
                "required": "true",
                "selectable": "true",
                "type": "string"
            }
        },
        "fixpack": {
            "default": "",
            "description": "The fixpack version of Liberty that should be isntalled, for initial installation this may be left blank",
            "displayname": "liberty fixpack version",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "fixpack_java": {
            "default": "",
            "description": "The java fixpack version to be installed, this field may be left blank",
            "displayname": "Java fixpack version",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "force_restart": {
            "default": "true",
            "description": "If set to true, the server will be restarted, if false, the server will not be restarted",
            "displayname": "Liberty force restart",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "type": "string"
        },
        "im_shared_dir": {
            "default": "",
            "description": "The shared resources directory is where installation artifacts are located that can be used by one or more package groups",
            "displayname": "Installation Manager shared resources directory",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "install_dir": {
            "default": "",
            "description": "The installation root directory for the WebSphere Liberty product binaries",
            "displayname": "WebSphere product installation directory",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "install_grp": {
            "default": "",
            "description": "Operating system group name that will be assigned to the product installation",
            "displayname": "Liberty group name",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "install_java": {
            "default": "true",
            "description": "If true, Java will be installed from archives",
            "displayname": "Java install from archives",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "install_javafp": {
            "default": "true",
            "description": "If true, a java fixpack will be installed",
            "displayname": "Java fixpack flag",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "install_user": {
            "default": "",
            "description": "Operating system userid that will be used to install the product. Userid will be created if it does not exist",
            "displayname": "Liberty installation userid",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "java_version": {
            "displayname": "Liberty Java SDK version,\n# <md>          :description => ",
            "hidden": "false"
        },
        "liberty_servers": {
            "server($INDEX)": {
                "feature": {
                    "default": "webProfile-7.0 adminCenter-1.0",
                    "description": "Lists the Liberty features that should be included in the feature manager list. For example, webProfile-7.0 adminCenter-1.0",
                    "displayname": "Liberty features that should be included in the server definition",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "httpport": {
                    "default": "9080",
                    "description": "HTTP Transport value that will be set in the defaultHttpEndpoint endpoint in server.xml",
                    "displayname": "Liberty server http port",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "httpsport": {
                    "default": "9443",
                    "description": "Secure HTTP Transport value that will be set in the defaultHttpEndpoint endpoint in server.xml",
                    "displayname": "Liberty server https port",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "jvm_params": {
                    "default": "-Xms256m -Xmx2048m",
                    "description": "Set the default JVM heap sizes for the liberty server, for example, -Xms256m -Xmx2048m",
                    "displayname": "Liberty server JVM settings",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "none",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "keystore_id": {
                    "default": "defaultKeyStore",
                    "description": "Keystore id that will be used when setting up the keyStore attribute in the server.xml",
                    "displayname": "Liberty keystore id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "keystore_password": {
                    "default": "",
                    "description": "Liberty keystore password used to protect the Liberty keystore id, this value will be stored in Chef Vault",
                    "displayname": "Liberty Keystore password",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "regex": "^[!-~]{8,32}$",
                    "regexdesc": "Allow 8 to 32 printable ASCII characters except space.",
                    "required": "true",
                    "secret": "true",
                    "selectable": "true",
                    "type": "string"
                },
                "name": {
                    "default": "defaultServer",
                    "description": "Name of the initial Liberty server to be created during provisioning",
                    "displayname": "Liberty server name",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "timeout": {
                    "default": "20",
                    "description": "Liberty server timeout value",
                    "displayname": "liberty server timeout",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "users": {
                    "admin_user": {
                        "name": {
                            "default": "admin",
                            "description": "Administrative console username used for accessing the console, the associated password is the admin_user password",
                            "displayname": "Liberty administrative user name",
                            "hidden": "false",
                            "immutable_after_create": "true",
                            "parm_type": "node",
                            "precedence_level": "node",
                            "required": "true",
                            "secret": "false",
                            "selectable": "true",
                            "type": "string"
                        },
                        "password": {
                            "default": "",
                            "description": "Password for the Liberty administrative user name, this value to be stored in the Chef Vault",
                            "displayname": "Liberty administrative user name password",
                            "hidden": "false",
                            "immutable_after_create": "true",
                            "parm_type": "node",
                            "precedence_level": "node",
                            "regex": "^[!-~]{8,32}$",
                            "regexdesc": "Allow 8 to 32 printable ASCII characters except space.",
                            "required": "true",
                            "secret": "true",
                            "selectable": "true",
                            "type": "string"
                        },
                        "role": {
                            "default": "admin",
                            "description": "Liberty role for which administrative users are to be added to, the admin_user will be added to this role by default",
                            "displayname": "liberty admin user role",
                            "hidden": "false",
                            "immutable_after_create": "true",
                            "parm_type": "node",
                            "precedence_level": "node",
                            "required": "true",
                            "secret": "false",
                            "selectable": "true",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "runas_user": {
            "default": "",
            "description": "Operating system userid that will be used to run the product. Userid will be created if it does not exist",
            "displayname": "Liberty runas user",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "sdk": {
            "common_ibm_sdk_v71": {
                "enable": {
                    "default": "false",
                    "description": "Indicates that Java 7.1 SDK version should be installed",
                    "displayname": "Liberty Install JDK 7.1 SDK",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "feature": {
                    "default": "com.ibm.sdk.71",
                    "description": "Feature name for java 7.1, default = com.ibm.sdk.71",
                    "displayname": "Java 7.1 SDK installation manager feature id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "offering_id": {
                    "default": "com.ibm.java.jdk.v71",
                    "description": "Java 7.1 SDK installation manager offering ID value, default = com.ibm.java.jdk.v71",
                    "displayname": "Java 7.1 SDK installation manager offering id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                }
            },
            "common_ibm_sdk_v8": {
                "enable": {
                    "default": "true",
                    "description": "Flag to determine whether Java 8 SDK will be installed or not, only one Java flag is applicable",
                    "displayname": "Liberty Install JDK 8 SDK",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "feature": {
                    "default": "com.ibm.sdk.8",
                    "description": "Installation Manager response file option to install Java 8 SDK, default = com.ibm.sdk.8",
                    "displayname": "Java 8 SDK installation manager feature id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "offering_id": {
                    "default": "com.ibm.java.jdk.v8",
                    "description": "Java SDK installation manager offering ID value, default = com.ibm.java.jdk.v8",
                    "displayname": "Java 8 SDK installation manager offering id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                }
            },
            "websphere_sdk_v70": {
                "enable": {
                    "default": "false",
                    "description": "Indicates that WebSphere Liberty Java 7 SDK version should be installed, only one Java flag is applicable",
                    "displayname": "Install WebSphere JDK 7 SDK",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "feature": {
                    "default": "com.ibm.sdk.7",
                    "description": "Feature name for java common_ibm_sdk_v71, default = com.ibm.sdk.7",
                    "displayname": "Java 7.0 SDK installation manager feature id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "offering_id": {
                    "default": "com.ibm.websphere.liberty.IBMJAVA.v70",
                    "description": "Java 7.0 SDK installation manager offering ID value, default = com.ibm.websphere.liberty.IBMJAVA.v70",
                    "displayname": "Java 7.0 SDK installation manager offering id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                }
            },
            "websphere_sdk_v80": {
                "enable": {
                    "default": "false",
                    "description": "Indicates that WebSphere Liberty Java 8 SDK version should be installed, only one Java flag is applicable",
                    "displayname": "Install WebSphere JDK 8 SDK",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "feature": {
                    "default": "com.ibm.sdk.8",
                    "description": "Feature name for java 8.0, default = com.ibm.sdk.8",
                    "displayname": "Java 8.0 SDK installation manager feature id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                },
                "offering_id": {
                    "default": "com.ibm.websphere.liberty.IBMJAVA.v80",
                    "description": "Java 8.0 SDK installation manager offering ID value, default = com.ibm.websphere.liberty.IBMJAVA.v80",
                    "displayname": "Java 8.0 SDK installation manager offering id",
                    "hidden": "false",
                    "immutable_after_create": "true",
                    "parm_type": "node",
                    "precedence_level": "node",
                    "required": "true",
                    "secret": "false",
                    "selectable": "true",
                    "type": "string"
                }
            }
        },
        "start_servers": {
            "default": "",
            "description": "List of liberty application servers to be stopped",
            "displayname": "Liberty servers to be started",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "stop_servers": {
            "default": "",
            "description": "List of liberty application servers to be stopped",
            "displayname": "Liberty servers to be stopped",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "tmp": {
            "default": "",
            "description": "Temp directory to be used for temporary files, this directory will be emptied after the installation",
            "displayname": "Liberty temporary directory",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        },
        "wlp_user_dir": {
            "default": "",
            "description": "Liberty directory which product configuration will be written",
            "displayname": "Liberty data dir",
            "hidden": "false",
            "immutable_after_create": "true",
            "parm_type": "node",
            "precedence_level": "node",
            "required": "true",
            "secret": "false",
            "selectable": "true",
            "type": "string"
        }
    }
}